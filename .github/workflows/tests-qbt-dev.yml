name: Dev Branch Tests

on:
  schedule:
    - cron: "0 0 1-30/3 * *"
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  Latest-Dev-Tests:
    name: "Dev Branch Test ${{ matrix.QBT_VER }}"
    runs-on: ubuntu-20.04  # update Qt PPA when moving beyond 20.04
    continue-on-error: true
    env:
      PYTHON_QBITTORRENTAPI_HOST: localhost:8080
      PYTHON_QBITTORRENTAPI_PASSWORD: adminadmin
      PYTHON_QBITTORRENTAPI_USERNAME: admin
      LIBTOR_VER: 1.2.15
      IS_QBT_DEV: True
    strategy:
      matrix:
        QBT_VER: ["master", "v4_4_x", "v4_3_x"]
        python-version: ["3.10"]

    steps:
      - name: Branch
        run: echo Branch ${{ github.ref }} ${{ github.head_ref }}

      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install OS Dependencies
        # dependencies to compile and run libtorrent and qBittorrent
        # qBt v4.4.0 requires >Qt v5.15.2....but that Qt isn't available from ubuntu PPAs until 21.04
        run: |
          sudo add-apt-repository ppa:beineri/opt-qt-5.15.2-focal
          sudo apt update
          sudo apt install build-essential cmake ninja-build pkg-config git zlib1g-dev libssl-dev libgeoip-dev \
            automake libtool libboost-dev libboost-system-dev libboost-chrono-dev libboost-random-dev
          sudo apt install --no-install-recommends qt515base qt515tools libqt5svg5-dev

      - name: Cache libtorrent
        # set up cache for libtorrent library
        id: cache-libtorrent
        uses: actions/cache@v2
        with:
          path: ~/libtor_installs
          key: ${{ runner.os }}-libtor-installs-3-${{ env.LIBTOR_VER }}

      - name: Build libtorrent
        # if cache missed, build libtorrent library.
        if: steps.cache-libtorrent.outputs.cache-hit != 'true'
        run: |
          set -x
          BASE_DIR="$HOME/libtor_installs"
          SRC_DIR="$BASE_DIR/src"
          LIBTOR_DIR="$BASE_DIR/libtorrent_${{ env.LIBTOR_VER }}"
          mkdir -p "$SRC_DIR" && mkdir -p "$LIBTOR_DIR"

          cd "$SRC_DIR"
          git clone https://github.com/arvidn/libtorrent.git --branch v${{ env.LIBTOR_VER }} --depth 1
          cd libtorrent
          cmake -B cmake-build-dir/Release -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$LIBTOR_DIR"
          cmake --build cmake-build-dir/Release --parallel $(nproc) && cmake --install cmake-build-dir/Release

      - name: Build qBittorrent
        # if cache missed, compile qBittorrent binary
        if: steps.cache-qbittorrent.outputs.cache-hit != 'true'
        run: |
          set -x
          QBT_BASE="$HOME/qbt_installs"
          SRC_DIR="$QBT_BASE/src"
          QBT_DIR="$QBT_BASE/qbt_${{ matrix.QBT_VER }}"
          LIBTOR_DIR="$HOME/libtor_installs/libtorrent_${{ env.LIBTOR_VER }}"
          mkdir -p "$SRC_DIR" && mkdir -p "$QBT_DIR"

          cd "$SRC_DIR"
          rm -rf qBittorrent
          git clone https://github.com/qbittorrent/qBittorrent.git --branch ${{ matrix.QBT_VER }} --depth 1
          cd qBittorrent
          cmake -G "Ninja" -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="$LIBTOR_DIR" -DVERBOSE_CONFIGURE=ON \
            -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=TRUE -DQBT_VER_STATUS= -DGUI=OFF -DCMAKE_INSTALL_PREFIX="$QBT_DIR"
          cmake --build build --parallel $(nproc) && cmake --install build

      - name: Cache pip
        # cache the pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3-

      - name: Install Python Dependencies
        # install the python dependencies to test qbittorrent-api
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -U codecov coveralls pytest pytest-cov
          pip install .

      - name: Test with pytest
        run: |
          mkdir -p $HOME/Downloads  # default download location for qbittorrent
          export LD_LIBRARY_PATH="$HOME/libtor_installs/libtorrent_${{ env.LIBTOR_VER }}/lib/:$LD_LIBRARY_PATH"
          $HOME/qbt_installs/qbt_${{ matrix.QBT_VER }}/bin/qbittorrent-nox --daemon
          python -c "import sys; print(sys.version)"
          $HOME/qbt_installs/qbt_${{ matrix.QBT_VER }}/bin/qbittorrent-nox -v
          pytest

      - name: Send mail
        if: failure()
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ github.job }} job of ${{ github.repository }} failed
          body: |
            ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} failed.
            https://github.com/rmartin16/qbittorrent-api/actions/runs/${{ github.run_id }}
          to: rmartin16+github-action@gmail.com   # comma-separated string
          from: rmartin16+github-action@gmail.com
